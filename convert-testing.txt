First example : Generating 15 .in.x files, each having 150000 lines  : 
┌──(vlad_kali㉿kali-vlad)-[~/Downloads/TASK5WND]
└─$ time python3 gen-input.py /home/vlad_kali/Downloads/TASK5WND x 15 150000 25%

real    1m35.477s
user    1m34.753s
sys     0m0.634s

Second example : Generating 15 .in.x files , each having 150000 lines (no caching) :
┌──(vlad_kali㉿kali-vlad)-[~/Downloads/TASK5WND]
└─$ time python3 gen-input.py /home/vlad_kali/Downloads/TASK5WND x 15 150000 25% nocache                                     

real    1m39.066s
user    1m38.624s
sys     0m0.433s

Third example : Generating 15 .in.x files , each having 150000 lines (minimum of 75% duplicate lines) : 
┌──(vlad_kali㉿kali-vlad)-[~/Downloads/TASK5WND]
└─$ time python3 gen-input.py /home/vlad_kali/Downloads/TASK5WND x 15 150000 75%

real    0m33.978s
user    0m33.589s
sys     0m0.388s

Fourth example : Generating 15 .in.x files , each having 150000 lines (minimum of 75% duplicate lines) no caching : 
┌──(vlad_kali㉿kali-vlad)-[~/Downloads/TASK5WND]
└─$ time python3 gen-input.py /home/vlad_kali/Downloads/TASK5WND x 15 150000 75% nocache                                     

real    0m56.889s
user    0m56.422s
sys     0m0.380s

Fifth example : Generating 15 .in files , each having 150000 lines :
┌──(vlad_kali㉿kali-vlad)-[~/Downloads/TASK5WND]
└─$ time python3 gen-input.py /home/vlad_kali/Downloads/TASK5WND in 15 150000 25%

real    1m9.447s
user    1m9.068s
sys     0m0.376s

Sixth example : Generating 15 .in files , each having 150000 lines (no caching) :
┌──(vlad_kali㉿kali-vlad)-[~/Downloads/TASK5WND]
└─$ time python3 gen-input.py /home/vlad_kali/Downloads/TASK5WND in 15 150000 25% nocache                                    

real    1m7.175s
user    1m6.882s
sys     0m0.292s

Seventh example : Generating 15 .in files , each having 150000 lines ( minimum of 75% duplicate lines) :
┌──(vlad_kali㉿kali-vlad)-[~/Downloads/TASK5WND]
└─$ time python3 gen-input.py /home/vlad_kali/Downloads/TASK5WND in 15 150000 25% nocache                                    

real    1m7.175s
user    1m6.882s
sys     0m0.292s

Eighth example : Generating 15 .in files , each having 150000 lines (minimum of 75% duplicate lines) no caching : 
┌──(vlad_kali㉿kali-vlad)-[~/Downloads/TASK5WND]
└─$ time python3 gen-input.py /home/vlad_kali/Downloads/TASK5WND in 15 150000 75% nocache                                    

real    0m24.102s
user    0m23.890s
sys     0m0.212s


